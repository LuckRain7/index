(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{407:function(t,s,n){"use strict";n.r(s);var a=n(42),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"linux"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[t._v("#")]),t._v(" linux")]),t._v(" "),n("blockquote",[n("p",[t._v("cent OS 7.7")])]),t._v(" "),n("h2",{attrs:{id:"命令行登录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令行登录"}},[t._v("#")]),t._v(" 命令行登录")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" root@101.132.103.213\n")])])]),n("h2",{attrs:{id:"常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -l "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出长数据串，包含文件的属性与权限数据等")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -a "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -d "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅列出目录本身，而不是列出目录的文件数据")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -h "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将文件容量以较易读的方式（GB，kB等）列出来")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -R "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# pwd 查看"当前工作目录"的完整路径。')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),t._v(" -P "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示实际物理路径，而非使用连接（link）路径")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),t._v(" -L "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当目录为连接路径时，显示连接路径")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir 用来创建指定的名称的目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 目录\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#rmdir 命令 从一个目录中删除一个或多个子目录项")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rmdir")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 目录\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mv 命令 mv [选项] 源文件或目录 目标文件或目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 源文件或目录 目标文件或目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" -b "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若需覆盖文件，则覆盖前先行备份")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" -f "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" -i "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若目标文件 (destination) 已经存在时，就会询问是否覆盖")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" -u "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若目标文件已经存在，且 source 比较新，才会更新(update)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" -t "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  --target-directory=DIRECTORY move all SOURCE arguments into DIRECTORY，即指定mv的目标目录，该选项适用于移动多个源文件到一个目录的情况，此时目标目录在前，源文件在后")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# touch 命令 更改文档或目录的日期时间")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 文件\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tar 命令 压缩和解压文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zxvf "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("文件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解压文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zcvf test.tar.gz "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("文件"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 压缩文件")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ipconfig 命令 ifconfig 命令用来查看和配置网络设备。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifconfig")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("网络设备"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("参数"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# netstat 命令 显示与IP、TCP、UDP和ICMP协议相关的统计数据")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -a "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有端口")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## ss")]),t._v("\nss -tln "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看TCP的listen的端口")]),t._v("\nss -tlnp "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看哪些进程使用了监听端口")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 防火墙")]),t._v("\nsystemctl status iptables "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" iptables status "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看防火墙状态")]),t._v("\nsystemctl stop iptables "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" iptables stop "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭防火墙")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看内存使用概况")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" -h\n")])])]),n("h2",{attrs:{id:"docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),n("h3",{attrs:{id:"安装-docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker"}},[t._v("#")]),t._v(" 安装 docker")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新yum")]),t._v("\nyum update\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载旧版本")]),t._v("\nyum remove docker  docker-common docker-selinux docker-engine\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装插件和必须软件包")]),t._v("\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y yum-utils device-mapper-persistent-data lvm2\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置yum源 阿里云镜像")]),t._v("\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看docker版本")]),t._v("\nyum list docker-ce --showduplicates "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" -r\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装docker")]),t._v("\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装未定版本")]),t._v("\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("指定版本"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装指定版本")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置开机自启")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start docker\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" docker\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 验证安装是否成功")]),t._v("\ndocker version\n")])])]),n("h3",{attrs:{id:"安装软件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装软件"}},[t._v("#")]),t._v(" 安装软件")]),t._v(" "),n("p",[n("strong",[t._v("Node")])]),t._v(" "),n("p",[t._v("登录 https://hub.docker.com/_/node?tab=tags 查找需要的版本")]),t._v(" "),n("p",[n("code",[t._v("docker pull node:10.12")])]),t._v(" "),n("p",[n("strong",[t._v("Nginx")])]),t._v(" "),n("p",[n("code",[t._v("docker pull nginx:latest")])]),t._v(" "),n("h3",{attrs:{id:"启动实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动实例"}},[t._v("#")]),t._v(" 启动实例")])])}),[],!1,null,null,null);s.default=e.exports}}]);